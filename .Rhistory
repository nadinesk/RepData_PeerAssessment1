mdist(x,y,newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y, pcy = 19, cex = 2, col = col1[newClust2])
points(x,y, pcy = 19, cex = 2, col = cols1[newClust2])
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex=2, lwd=2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y,col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source(filename = "addPatt.R", local = TRUE)
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svdsvd$v[,1]
svd$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd$d
svd2$d
svd2$v[,2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u %*% svd1$d %*% svd1$v
svd1$d[1] * (svd1$u %*% svd1$v)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] * svd1$d[1:2] * t(svd1$v[,1:2])
a2 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage
myImage(a2)
myImage <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]) )
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
rm(myImage)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
skip()
swirl()
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd)[562:563]
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject ==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist(sub1[,:3])
mdist(sub1[,1:3])
mdist <- sub1[,1:3]
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- whic.max(svd1$v[,2])
maxCon <- whicj.max(svd1$v[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[c(10:12)])
mdist <- dist(sub1[c(10:12, maxCon)])
mdist <- dist(sub1[,c(10:12,maxCon)])
hculstering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kclust <- kmeans(sub1[,-c(562,563)]), centers = 6)
kclust <- kmeans(sub1[,-c(562,563)], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- means(sub1[,-c(562,563)], centers = 6, nstart = 100)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- kclust$size==29
laying <- which(kclust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,c(1:3)])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
set.seet(3435)
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSpam = spam[trainIdicator == 1]
trainSpam = spam[trainIdicator == 1, ]
trainSpam = spam[trainIndicator == 1, ]
testSpam = spam[trainindicator == 0,]
testSpam = spam[trainIndicator == 0,]
2314+2287
str(spam)
names(trainSpam)
head(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve +1) ~ trainSpam$type)
hCluster = hclust(dist(t([trainSpam[,1:57])))
hCluster = hclust(dist(t([trainSpam[,1:57]])))
trainSpam$numType = as.numeric(trainSpam$type) - 1
table(trainSpam$numType)
costFunction = function(x,y) sum(x != (y > 0.5))
costFunction = function(x,y) sum(x != (y > 0.5))
library(boot)
for (i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
names(trainSpam)[which.min(cvError)]
for (i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
cvError = rep(NA, 55)
for (i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
warnings()
names(trainSpam)[which.min(cvError)]
predictionModel = glm(numType ~ charDollar, family = "binomial", data = trainSpam)
predictionTest = predict(predictionModel, testSpam)
predictedSpam = rep("nonspam", dim(testSpam)[1])
predictedSpam[predictionModel$fitted > 0.5] = "spam"
table(predictedSpam, testSpam$type)
library(markdown)
install.packages("markdown")
install.packages("markdown")
library(markdown)
library(dplyr)
setwd("D:/New_folder/RepData_PeerAssessment1/")
steps <- read.csv("activity.csv")
steps$date <- as.Date(as.character(steps$date))
steps_total <- steps %>%
group_by(date) %>%
summarize(sum = sum(steps))
hist(steps_total$sum)
library(xtable)
steps_mean <- steps %>%
group_by(date) %>%
summarize(mean = mean(steps))
stepsmean_table <- xtable(steps_mean)
print(stepsmean_table, type = "html")
steps_median <- steps %>%
group_by(date) %>%
summarize(median = median(steps))
stepsmedian_table <- xtable(steps_median)
print(stepsmedian_table, type = "html")
library(ggplot2)
stepsint_avg <- steps %>%
group_by(interval) %>%
summarize(meanInt = mean(steps, na.rm=TRUE))
tbl_df(stepsint_avg)
ts_int <- ggplot(data=stepsint_avg, aes(x=interval, y=meanInt))  + geom_line() + ggtitle("Average Steps Taken by Interval Across All Days") +xlab("Interval") + ylab("Average Steps")
ts_int
max_avg_int <- filter(stepsint_avg, meanInt == max(stepsint_avg$meanInt))
max_avg_int$interval
missing_count <- sum(is.na(steps$steps))
missing_count
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
##Load packages
```{r echo=TRUE}
library(dplyr)
```
## Loading and preprocessing the data
```{r loadData, echo=TRUE}
setwd("D:/New_folder/RepData_PeerAssessment1/")
steps <- read.csv("activity.csv")
steps$date <- as.Date(as.character(steps$date))
```
## What is mean total number of steps taken per day?
```{r total_mean_median_Steps, echo=TRUE}
steps_total <- steps %>%
group_by(date) %>%
summarize(sum = sum(steps))
hist(steps_total$sum)
library(xtable)
steps_mean <- steps %>%
group_by(date) %>%
summarize(mean = mean(steps))
stepsmean_table <- xtable(steps_mean)
print(stepsmean_table, type = "html")
steps_median <- steps %>%
group_by(date) %>%
summarize(median = median(steps))
stepsmedian_table <- xtable(steps_median)
print(stepsmedian_table, type = "html")
```
## What is the average daily activity pattern?
```{r avgdailyactivity, echo=TRUE, results = "asis"}
library(ggplot2)
stepsint_avg <- steps %>%
group_by(interval) %>%
summarize(meanInt = mean(steps, na.rm=TRUE))
tbl_df(stepsint_avg)
ts_int <- ggplot(data=stepsint_avg, aes(x=interval, y=meanInt))  + geom_line() + ggtitle("Average Steps Taken by Interval Across All Days") +xlab("Interval") + ylab("Average Steps")
ts_int
max_avg_int <- filter(stepsint_avg, meanInt == max(stepsint_avg$meanInt))
max_avg_int$interval
```
## Imputing missing values
```{r missingVals, echo=TRUE, results = "asis"}
missing_count <- sum(is.na(steps$steps))
missing_count
```
## Are there differences in activity patterns between weekdays and weekends?
steps_mean1 <- steps %>%
group_by(date) %>%
mutate(meansteps = mean(steps))
steps_mean1
View(steps_mean1)
table(steps_mean1$meansteps, steps_mean1$date)
table(steps_mean1$date, steps_mean1$meansteps)
steps_mean1$steps <- ifelse(is.na(steps), steps_mean1$meansteps, steps_mean1$steps)
View(steps_mean1)
steps_mean1 <- steps %>%
group_by(date) %>%
mutate(meansteps =
steps_mean1$steps <- ifelse(is.na(steps_mean1$steps), steps_mean1$meansteps, steps_mean1$steps)
steps_mean1$steps <- ifelse(is.na(steps_mean1$steps), steps_mean1$meansteps, steps_mean1$steps)
View(steps_mean1)
steps_mean1$steps[is.na(steps_mean1$steps)] <- steps_mean1$meansteps
steps_mean1$steps <- ifelse(is.na(steps_mean1$steps) == TRUE, steps_mean1$meansteps, steps_mean1$steps)
View(steps_mean1)
steps_mean1 <- steps %>%
group_by(date) %>%
mutate(meansteps = mean(steps, na.rm=TRUE))
steps_mean1
steps_meanInt1 <- steps %>%
group_by(interval) %>%
mutate(meanIntsteps = mean(steps, na.rm=TRUE))
steps_mean1
steps_meanInt1
table(steps_meanInt1$meanIntsteps)
table(steps_meanInt1$meanIntsteps, na.rm=TRUE)
table(steps_meanInt1$meanIntsteps, na.rm=FALSE)
table(steps_meanInt1$meanIntsteps, useA = c("always"))
table(steps_meanInt1$meanIntsteps, useNA = c("always"))
steps_meanInt1$steps <- ifelse(is.na(steps_meanInt1$steps) == TRUE, steps_meanInt1$meanIntsteps, steps_meanInt1$steps)
steps_meanInt1```
steps_meanInt1
View(steps_meanInt1)
View(steps_meanInt1)
View(steps)
steps_meanInt1 <- steps_meanInt1[c(1:3)]
str(steps_meanInt1)
View(steps_meanInt1)
steps_meanInt1 <- data.frame(steps_meanInt1[c(1:3)])
str(steps_meanInt1)
steps_meanInt_sum <- steps_meanInt1 %>%
group_by(date) %>%
summarize(sum = sum(steps))
View(steps_meanInt_sum)
hist(steps_meanInt_sum$sum)
steps_meanInt_mean <- steps_meanInt1 %>%
group_by(date) %>%
summarize(mean = mean(steps))
steps_meanInt_mean <- steps_meanInt1 %>%
group_by(date) %>%
summarize(mean = mean(steps))
steps_meanInt_mean
steps_meanInt_median <- steps_meanInt1 %>%
group_by(date) %>%
summarize(median = median(steps))
steps_meanInt_median
steps_meanInt_mean_table <- xtable(steps_meanInt_mean_table)
steps_meanInt_median_table <- xtable(steps_meanInt_median)
steps_meanInt_median <- steps_meanInt1 %>%
group_by(date) %>%
summarize(median = median(steps))%>%
as.character(dates)
View(steps_mean)
steps_meanInt_median <- steps_meanInt1 %>%
group_by(date) %>%
summarize(median = median(steps))%>%
as.character(date)
steps_meanInt_median_table <- xtable(steps_meanInt_median)
steps_meanInt_median <- steps_meanInt1 %>%
group_by(date) %>%
summarize(median = median(steps))%>%
as.Date(date, "%M-%d-%y")
steps_meanInt_median <- steps_meanInt1 %>%
group_by(date) %>%
summarize(median = median(steps))%>%
as.Date(date, "%Y-%m-%d")
steps$date <- as.Date((as.character(steps$date)), "%Y-%m-%d")
str(steps)
steps$date <- as.Date((as.character(steps$date)), "%m-%d-%y")
str(steps)
steps$date <- as.Date((as.character(steps$date)), "%m-%d-%Y")
str(steps)
steps <- read.csv("activity.csv")
steps$date <- as.Date((as.character(steps$date)), "%m-%d-%Y")
str(steps)
steps <- read.csv("activity.csv")
steps$date <- as.Date((as.character(steps$date)), "%Y/%m/%d")
str(steps)
steps <- read.csv("activity.csv")
str(steps)
steps$date <- as.Date((as.character(steps$date)), "%Y/%m/%d")
str(steps)
steps <- read.csv("activity.csv")
str(steps)
steps$date <- as.Date((as.character(steps$date)), "%Y/%m/%d")
str(steps)
steps <- read.csv("activity.csv")
steps$date <- as.Date((as.character(steps$date)), "%Y-%m-%d")
str(steps)
steps$date <- as.Date((as.character(steps$date)), "%y-%m-%d")
str(steps)
steps <- read.csv("activity.csv")
steps$date <- as.Date((as.character(steps$date)), "%y-%m-%d")
str(steps)
steps <- read.csv("activity.csv")
str(steps)
steps <- read.csv("activity.csv")
str(steps)
steps$date <- as.Date(as.character(steps$date))
str(steps)
format(steps$date, "%m/%d/%y")
steps$date <- format(steps$date, "%m/%d/%y")
steps
steps_meanInt1 <- steps %>%
group_by(interval) %>%
mutate(meanIntsteps = mean(steps, na.rm=TRUE))
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
##Load packages
```{r echo=TRUE}
library(dplyr)
```
## Loading and preprocessing the data
```{r loadData, echo=TRUE}
setwd("D:/New_folder/RepData_PeerAssessment1/")
steps <- read.csv("activity.csv")
steps$date <- as.Date(as.character(steps$date))
steps$date <- format(steps$date, "%m/%d/%y")
```
## What is mean total number of steps taken per day?
```{r total_mean_median_Steps, echo=TRUE, results="asis"}
library(xtable)
steps_total <- steps %>%
group_by(date) %>%
summarize(sum = sum(steps))
hist(steps_total$sum)
steps_mean <- steps %>%
group_by(date) %>%
summarize(mean = mean(steps))
stepsmean_table <- xtable(steps_mean)
print(stepsmean_table, type = "html")
steps_median <- steps %>%
group_by(date) %>%
summarize(median = median(steps))
stepsmedian_table <- xtable(steps_median)
print(stepsmedian_table, type="html")
```
## What is the average daily activity pattern?
```{r avgdailyactivity, echo=TRUE}
library(ggplot2)
stepsint_avg <- steps %>%
group_by(interval) %>%
summarize(meanInt = mean(steps, na.rm=TRUE))
tbl_df(stepsint_avg)
ts_int <- ggplot(data=stepsint_avg, aes(x=interval, y=meanInt))  + geom_line() + ggtitle("Average Steps Taken by Interval Across All Days") +xlab("Interval") + ylab("Average Steps")
ts_int
max_avg_int <- filter(stepsint_avg, meanInt == max(stepsint_avg$meanInt))
max_avg_int$interval
```
## Imputing missing values
```{r missingVals, echo=TRUE, results = "asis"}
missing_count <- sum(is.na(steps$steps))
missing_count
steps_meanInt1 <- steps %>%
group_by(interval) %>%
mutate(meanIntsteps = mean(steps, na.rm=TRUE))
steps_meanInt1
steps_meanInt1$steps <- ifelse(is.na(steps_meanInt1$steps) == TRUE, steps_meanInt1$meanIntsteps, steps_meanInt1$steps)
steps_meanInt1
steps_meanInt1 <- data.frame(steps_meanInt1[c(1:3)])
str(steps_meanInt1)
steps_meanInt_sum <- steps_meanInt1 %>%
group_by(date) %>%
summarize(sum = sum(steps))
hist(steps_meanInt_sum$sum)
steps_meanInt_mean <- steps_meanInt1 %>%
group_by(date) %>%
summarize(mean = mean(steps))
steps_meanInt_mean_table <- xtable(steps_meanInt_mean)
print(steps_meanInt_mean_table, type="html")
steps_meanInt_median <- steps_meanInt1 %>%
group_by(date) %>%
summarize(median = median(steps))%>%
as.Date(date, "%Y-%m-%d")
steps_meanInt_median_table <- xtable(steps_meanInt_median)
print(steps_meanInt_median_table, type="html")
```
## Are there differences in activity patterns between weekdays and weekends?
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
##Load packages
```{r echo=TRUE}
library(dplyr)
```
## Loading and preprocessing the data
```{r loadData, echo=TRUE}
setwd("D:/New_folder/RepData_PeerAssessment1/")
steps <- read.csv("activity.csv")
steps$date <- as.Date(as.character(steps$date))
steps$date <- format(steps$date, "%m/%d/%y")
```
## What is mean total number of steps taken per day?
```{r total_mean_median_Steps, echo=TRUE, results="asis"}
library(xtable)
steps_total <- steps %>%
group_by(date) %>%
summarize(sum = sum(steps))
hist(steps_total$sum)
steps_mean <- steps %>%
group_by(date) %>%
summarize(mean = mean(steps))
stepsmean_table <- xtable(steps_mean)
print(stepsmean_table, type = "html")
steps_median <- steps %>%
group_by(date) %>%
summarize(median = median(steps))
stepsmedian_table <- xtable(steps_median)
print(stepsmedian_table, type="html")
```
## What is the average daily activity pattern?
```{r avgdailyactivity, echo=TRUE}
library(ggplot2)
stepsint_avg <- steps %>%
group_by(interval) %>%
summarize(meanInt = mean(steps, na.rm=TRUE))
tbl_df(stepsint_avg)
ts_int <- ggplot(data=stepsint_avg, aes(x=interval, y=meanInt))  + geom_line() + ggtitle("Average Steps Taken by Interval Across All Days") +xlab("Interval") + ylab("Average Steps")
ts_int
max_avg_int <- filter(stepsint_avg, meanInt == max(stepsint_avg$meanInt))
max_avg_int$interval
```
## Imputing missing values
```{r missingVals, echo=TRUE, results = "asis"}
missing_count <- sum(is.na(steps$steps))
missing_count
steps_meanInt1 <- steps %>%
group_by(interval) %>%
mutate(meanIntsteps = mean(steps, na.rm=TRUE))
steps_meanInt1
steps_meanInt1$steps <- ifelse(is.na(steps_meanInt1$steps) == TRUE, steps_meanInt1$meanIntsteps, steps_meanInt1$steps)
steps_meanInt1
steps_meanInt1 <- data.frame(steps_meanInt1[c(1:3)])
str(steps_meanInt1)
steps_meanInt_sum <- steps_meanInt1 %>%
group_by(date) %>%
summarize(sum = sum(steps))
hist(steps_meanInt_sum$sum)
steps_meanInt_mean <- steps_meanInt1 %>%
group_by(date) %>%
summarize(mean = mean(steps))
steps_meanInt_mean_table <- xtable(steps_meanInt_mean)
print(steps_meanInt_mean_table, type="html")
steps_meanInt_median <- steps_meanInt1 %>%
group_by(date) %>%
summarize(median = median(steps))%>%
steps_meanInt_median_table <- xtable(steps_meanInt_median)
print(steps_meanInt_median_table, type="html")
```
## Are there differences in activity patterns between weekdays and weekends?
library(dplyr)
